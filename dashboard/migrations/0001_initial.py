# Generated by Django 4.0.5 on 2022-07-07 09:58

import dashboard.models
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AreaOfIssue',
            fields=[
                ('name', models.CharField(max_length=200)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('name', models.CharField(max_length=200)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('name', models.CharField(max_length=200)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupervisorTeam',
            fields=[
                ('name', models.CharField(max_length=200)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('closure_date', models.DateField(blank=True, null=True)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('issue_solved', models.CharField(blank=True, choices=[('no', 'No'), ('yes', 'Yes')], max_length=5, null=True)),
                ('job_reference_number', models.CharField(blank=True, max_length=100, null=True)),
                ('ncr_number', models.CharField(blank=True, max_length=100, null=True)),
                ('advice_number', models.CharField(blank=True, max_length=100, null=True)),
                ('corrective_action', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('downtime_time', dashboard.models.CustomDuration()),
                ('estimated_completion_time', models.IntegerField(blank=True, null=True)),
                ('images', models.CharField(blank=True, max_length=300, null=True)),
                ('interim_containment_action', models.TextField(blank=True, null=True)),
                ('issue_affect_other_areas', models.CharField(blank=True, choices=[('no', 'No'), ('yes', 'Yes')], max_length=5, null=True)),
                ('issue_affect_other_areas_description', models.TextField(blank=True, null=True)),
                ('ncr_hyperlink', models.CharField(blank=True, max_length=300, null=True)),
                ('prevented_reoccurrence', models.CharField(blank=True, choices=[('no', 'No'), ('yes', 'Yes')], max_length=5, null=True)),
                ('result_validation_action', models.TextField(blank=True, null=True)),
                ('root_cause', models.TextField(blank=True, null=True)),
                ('area', models.ManyToManyField(blank=True, to='dashboard.areaofissue')),
                ('employee', models.ManyToManyField(blank=True, to='dashboard.employees')),
                ('location', models.ManyToManyField(blank=True, to='dashboard.locations')),
                ('supervisor', models.ManyToManyField(blank=True, to='dashboard.supervisorteam')),
            ],
        ),
    ]
